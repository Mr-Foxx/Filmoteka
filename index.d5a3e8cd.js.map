{"mappings":"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","sources":["src/js/fetch_start.js","src/js/pagination.js"],"sourcesContent":["import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport axios from 'axios';\n\nimport Notiflix from 'notiflix';\nimport { genres } from './genres';\nimport { paginationRender } from './pagination';\nimport { showModal } from './showModal';\n\nconst container = document.querySelector('.gallery-start');\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\n// ==\nlet totalItems = 1200;\nlet currentPage = 1;\nlet query = null;\n// ==\nexport async function fetchMovies(page = 1) {\n  try {\n    // const response = await axios.get(\n    //   `${BASE_URL}movie/now_playing?api_key=${KEY}`\n    // );\n    const response = await axios.get(\n      `${BASE_URL}movie/now_playing?api_key=${KEY}&page=${page}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movies');\n  }\n}\n\nexport function renderMovies(movies) {\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${movie.genre_ids.map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n    `\n    )\n    .join('');\n\n  container.innerHTML = movieHTML;\n\n  const imgStartElements = document.querySelectorAll('.img-start');\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', () => {\n      showModal(movies[index]);\n    });\n  });\n\n  const modalOverlay = document.querySelector('.modal__overlay');\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// ================\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\n// =\n\n// function click(movie) {\n//   const watchedBtn = document.querySelector('.modal__button-watched');\n//   const queueBtn = document.querySelector('.modal__button-queue');\n\n//   // =watchedBtn при натисканні на кнопку первіряє по ід чи є фільм в локал та змінює напис кнопки\n\n//   const storedWatchedMovies =\n//     JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n//   const isWatchedMovieExists = storedWatchedMovies.some(\n//     storedMovie => storedMovie.id === movie.id\n//   );\n//   if (isWatchedMovieExists) {\n//     watchedBtn.textContent = 'REMOVE FROM WATCHED';\n//   } else {\n//     watchedBtn.textContent = 'ADD TO WATCHED';\n//   }\n\n//   watchedBtn.addEventListener('click', () => {\n//     let storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n//     const isMovieExists = storedMovies.some(\n//       storedMovie => storedMovie.id === movie.id\n//     );\n\n//     if (isMovieExists) {\n//       storedMovies = storedMovies.filter(\n//         storedMovie => storedMovie.id !== movie.id\n//       );\n//       Notiflix.Notify.info('movie removed from watched');\n//       watchedBtn.textContent = 'ADD TO WATCHED';\n//     } else {\n//       storedMovies.push(movie);\n//       Notiflix.Notify.success('Movie added to watch');\n//       watchedBtn.textContent = 'REMOVE FROM WATCHED';\n//     }\n\n//     localStorage.setItem('watchMovies', JSON.stringify(storedMovies));\n//   });\n\n//   // = queueBtn\n\n//   const storedQueueMovies =\n//     JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n//   const isQueueMovieExists = storedQueueMovies.some(\n//     storedMovie => storedMovie.id === movie.id\n//   );\n//   if (isQueueMovieExists) {\n//     queueBtn.textContent = 'REMOVE FROM WATCHED';\n//   } else {\n//     queueBtn.textContent = 'ADD TO WATCHED';\n//   }\n\n//   queueBtn.addEventListener('click', () => {\n//     let storedQueueMovies =\n//       JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n//     const isMovieExists = storedQueueMovies.some(\n//       storedMovie => storedMovie.id === movie.id\n//     );\n\n//     if (isMovieExists) {\n//       storedQueueMovies = storedQueueMovies.filter(\n//         storedMovie => storedMovie.id !== movie.id\n//       );\n//       Notiflix.Notify.info('movie removed from watched');\n//       queueBtn.textContent = 'ADD TO QUEUQ';\n//     } else {\n//       storedQueueMovies.push(movie);\n//       Notiflix.Notify.success('Movie added to watch');\n//       queueBtn.textContent = 'REMOVE FROM QUEUQ';\n//     }\n\n//     localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n//   });\n// }\n\n// function showModal(movie) {\n//   const modalDetails = document.querySelector('.movie-details_modal');\n\n//   modalDetails.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n\n//   click(movie);\n// }\n\n// Функція, що отримує список фільмів та відображає їх\nasync function renderStartMovies(page = 1) {\n  try {\n    const movies = await fetchMovies();\n    renderMovies(movies);\n    paginationRender(movies.total_results, page);\n\n    addClickEventListeners(movies);\n    addOverlayClickListener();\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error rendering start movies');\n  }\n}\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      const movieDetails = await fetchMovieDetails(movies[index].id);\n      showModal(movieDetails);\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\nconsole.log('start-page');\n\nasync function init() {\n  const movies = await fetchMovies();\n  renderMovies(movies);\n\n  paginationRender(1, null);\n}\n\ninit();\n\npaginationRender(totalItems, currentPage, query);\nrenderStartMovies();\n\nconsole.log('start-page after function');\n\n// export default fetchMovies;\n// export default renderMovies\n// =================\n","// =\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { fetchMovies, renderMovies } from './fetch_start';\n\nconst containerTui = document.getElementById('tui-pagination-container');\n\nlet totalItems = 1200;\nlet currentPage = 1;\nlet query = null;\n\nfunction paginationRender(page = 1, query) {\n  options.totalItems = totalItems;\n  options.page = page;\n  let pagination = new Pagination(containerTui, options);\n\n  // query = query || null;\n\n  if (query) {\n    pagination.on('beforeMove', async ({ page }) => {\n      const movies = await fetchMovies(query, page);\n      renderMovies(movies);\n      window.scroll({\n        top: 0,\n        behavior: 'smooth',\n      });\n    });\n  } else {\n    pagination.on('beforeMove', ({ page }) => {\n      renderMovies(page);\n      window.scroll({\n        top: 0,\n        behavior: 'smooth',\n      });\n    });\n  }\n\n  pagination.on('beforeMove', async event => {\n    currentPage = event.page;\n    const movies = await fetchMovies(currentPage);\n    renderMovies(movies);\n\n    window.scrollTo(0, 0);\n  });\n}\n\nconst options = {\n  totalItems: 20000,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n  firstItemClassName: 'tui-first-child',\n  lastItemClassName: 'tui-last-child',\n  template: {\n    page: '<a href=\"page={{page}}\" class=\"tui-page-btn\">{{page}}</a>',\n    currentPage:\n      '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n    moveButton:\n      '<a href=\"page={{page}}\" class=\"tui-page-btn tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</a>',\n    disabledMoveButton:\n      '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n      '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n      '</span>',\n    moreButton:\n      '<a href=\"page={{page}}\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n      '<span class=\"tui-ico-ellip\">...</span>' +\n      '</a>',\n  },\n};\n\nexport { paginationRender };\n"],"names":["$bpxeT","parcelRequire","$dfaf77c789ce7a24$var$containerTui","document","getElementById","$dfaf77c789ce7a24$var$currentPage","$dfaf77c789ce7a24$export$5fcd9471792c11c9","page1","arguments","length","query1","$dfaf77c789ce7a24$var$options","totalItems","page","pagination","$parcel$interopDefault","$1VFfL","on","$2TvXO","mark","_callee","param","$bf20161f29d65f28$export$88181abcadffafee","$bf20161f29d65f28$export$1a30573fde3dfc62","_ctx","sent","window","scroll","top","behavior","event","scrollTo","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$bf20161f29d65f28$var$container","querySelector","$bf20161f29d65f28$var$BASE_URL","$bf20161f29d65f28$var$KEY","$bf20161f29d65f28$var$_fetchMovies","apply","this","response","_args","$dIxxU","default","get","concat","data","results","console","error","t0","Error","movies","movieHTML","map","movie","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","$twtVq","genres","join","innerHTML","querySelectorAll","forEach","imgStartElement","index","addEventListener","$4hdhQ","showModal","style","display","$bf20161f29d65f28$var$fetchMovieDetails","movieId","$bf20161f29d65f28$var$_fetchMovieDetails","$bf20161f29d65f28$var$_renderStartMovies","total_results","$bf20161f29d65f28$var$addClickEventListeners","$bf20161f29d65f28$var$addOverlayClickListener","movieDetails","$bf20161f29d65f28$var$_init","log","$bf20161f29d65f28$var$init","$bf20161f29d65f28$var$renderStartMovies"],"version":3,"file":"index.d5a3e8cd.js.map"}