{"mappings":"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","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\nconst watchLibraryBtn = document.querySelector('.button__libraty-watched');\nconst queueLibraryBtn = document.querySelector('.button__library-queue');\nconst watchContainer = document.querySelector('.lib__watched-container');\nconst queueContainer = document.querySelector('.lib__queue-container');\nconst emptyCountainer = document.querySelector('.empty-page');\nconst emptyContQueue = document.querySelector('.empty-page-queue');\n\n// queueContainer.style.display = 'none';\nqueueContainer.style.transform = 'scale(0)';\nwatchLibraryBtn.classList.add('library_btn-click-color');\n\nwatchLibraryBtn.addEventListener('click', openWatched);\nqueueLibraryBtn.addEventListener('click', openQueue);\n\nfunction openWatched() {\n  // queueContainer.style.display = 'none';\n  queueContainer.style.transform = 'scale(0)';\n  // watchContainer.style.display = 'block';\n  watchContainer.style.transform = 'scale(1)';\n  watchLibraryBtn.classList.add('library_btn-click-color');\n  queueLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n  console.log(storedMovies.length);\n  if (storedMovies.length === 0) {\n    watchContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderWatchMovies(storedMovies);\n  console.log(storedMovies);\n}\n\nfunction openQueue() {\n  // watchContainer.style.display = 'none';\n  watchContainer.style.transform = 'scale(0)';\n  // queueContainer.style.display = 'block';\n  queueContainer.style.transform = 'scale(1)';\n  queueLibraryBtn.classList.add('library_btn-click-color');\n  watchLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n  console.log(storedQueueMovies.length);\n  if (storedQueueMovies.length === 0) {\n    queueContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderQueueMovies(storedQueueMovies);\n  console.log(storedQueueMovies);\n}\n\nopenWatched();\n\nopenQueue();\n\nconst genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nfunction renderWatchMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const watchContainer = document.querySelector('.lib__watched-container');\n  watchContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderQueueMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const queueContainer = document.querySelector('.lib__queue-container');\n  queueContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderAfterDelitingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    const updatedWatchedMovies = storedWatchedMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('watchMovies', JSON.stringify(updatedWatchedMovies));\n\n    renderWatchMovies(updatedWatchedMovies);\n  }\n}\n\nfunction renderAfterDelitingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    const updatedQueueMovies = storedQueueMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('queueMovies', JSON.stringify(updatedQueueMovies));\n\n    renderQueueMovies(updatedQueueMovies);\n  }\n}\n\n// ==Modal Functions\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\nfunction showModal(movie) {\n  const modalDetails = document.querySelector('.movie-details_modal');\n\n  modalDetails.innerHTML = `\n    <div class=\"modal__list\">\n      <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" alt=\"${movie.original_title} Poster\">\n      <div class=\"modal__text\">\n        <h2>${movie.original_title}</h2>\n        <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n        <p>Popularity: ${movie.popularity}</p>\n        <p>Original Title: ${movie.original_title}</p>\n        <p>Genre: ${\n          Array.isArray(movie.genres)\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : ''\n        }</p>\n        <p class=\"abaut\"> ABOUT </p> \n        <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n        <div class=\"modal__buttons\"> \n          <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n          <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'block';\n\n  click(movie);\n}\n\nfunction click(movie) {\n  const watchedBtn = document.querySelector('.modal__button-watched');\n  const queueBtn = document.querySelector('.modal__button-queue');\n\n  // =watchedBtn при натисканні на кнопку первіряє по ід чи є фільм в локал та змінює напис кнопки\n\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    watchedBtn.textContent = 'REMOVE FROM WATCHED';\n  } else {\n    watchedBtn.textContent = 'ADD TO WATCHED';\n  }\n\n  watchedBtn.addEventListener('click', () => {\n    let storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n    const isMovieExists = storedMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedMovies = storedMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      watchedBtn.textContent = 'ADD TO WATCHED';\n      renderAfterDelitingObjectWatch(movie);\n    } else {\n      storedMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      watchedBtn.textContent = 'REMOVE FROM WATCHED';\n    }\n\n    localStorage.setItem('watchMovies', JSON.stringify(storedMovies));\n  });\n\n  // = queueBtn\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    queueBtn.textContent = 'REMOVE FROM QUEUE';\n  } else {\n    queueBtn.textContent = 'ADD TO QUEUE';\n  }\n\n  queueBtn.addEventListener('click', () => {\n    let storedQueueMovies =\n      JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n    const isMovieExists = storedQueueMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedQueueMovies = storedQueueMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      queueBtn.textContent = 'ADD TO QUEUQ';\n      renderAfterDelitingObjectQueue(movie);\n    } else {\n      storedQueueMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      queueBtn.textContent = 'REMOVE FROM QUEUQ';\n    }\n\n    localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n  });\n}\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movies[index].id);\n        showModal(movieDetails);\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// ==\n\n// const savedData1 = JSON.parse(localStorage.getItem('watchMovies'));\n// // console.log(savedData1.length);\n// // console.log(123123);\n// if (savedData1.length > 0) {\n//   // emptyCountainer.style.display = 'none';\n//   emptyCountainer.classList.add('is-hidden');\n// }\n// emptyContQueue.classList.add('is-hidden');\n\n// ==\n\n//   const imgStartElements = document.querySelectorAll('.img-start');\n//   imgStartElements.forEach((imgStartElement, index) => {\n//     imgStartElement.addEventListener('click', () => {\n//       showModal(movies[index]);\n//     });\n//   });\n\n//   const modalOverlay = document.querySelector('.modal__overlay');\n//   modalOverlay.addEventListener('click', () => {\n//     const modal = document.querySelector('.modal');\n//     modal.style.display = 'none';\n//   });\n\n// ==\n\n// function showModal(movie) {\n//   //   const modalDetails = document.querySelector('.movie-details_modal');\n//   const watchContainer = document.querySelector('.lib__watched-container');\n\n//   watchContainer.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n// }\n\n// ===================\n\n// async function initialize() {\n//   try {\n//     Notiflix.Loading.dots('Loading...');\n//     const movies = await fetchMovies();\n//     renderMovies(movies);\n//     Notiflix.Loading.remove();\n//   } catch (error) {\n//     Notiflix.Report.failure('Oops!', error.message, 'OK');\n//   }\n// }\n"],"names":["$2shzp","parcelRequire","$1cafa503bc57b7a0$var$watchLibraryBtn","document","querySelector","$1cafa503bc57b7a0$var$queueLibraryBtn","$1cafa503bc57b7a0$var$watchContainer","$1cafa503bc57b7a0$var$queueContainer","$1cafa503bc57b7a0$var$openWatched","style","transform","classList","add","remove","storedMovies","JSON","parse","localStorage","getItem","console","log","length","$1cafa503bc57b7a0$var$renderWatchMovies","innerHTML","$1cafa503bc57b7a0$var$openQueue","storedQueueMovies","$1cafa503bc57b7a0$var$renderQueueMovies","addEventListener","$1cafa503bc57b7a0$var$genres","movies","movieHTML","map","movie","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","join","$1cafa503bc57b7a0$var$addClickEventListeners","$1cafa503bc57b7a0$var$addOverlayClickListener","$1cafa503bc57b7a0$var$showModal","vote_average","vote_count","popularity","Array","isArray","genres","genre","name","overview","display","watchedBtn","queueBtn","storedWatchedMovies","some","storedMovie","textContent","filter","$parcel$interopDefault","$7Y9D8","Notify","info","updatedWatchedMovies","setItem","stringify","$1cafa503bc57b7a0$var$renderAfterDelitingObjectWatch","push","success","storedQueueMovies1","updatedQueueMovies","$1cafa503bc57b7a0$var$renderAfterDelitingObjectQueue","$1cafa503bc57b7a0$var$click","querySelectorAll","forEach","imgStartElement","index","async","movieId","default","get","data","error","Error","$1cafa503bc57b7a0$var$fetchMovieDetails","message"],"version":3,"file":"library.eb99dbd4.js.map"}