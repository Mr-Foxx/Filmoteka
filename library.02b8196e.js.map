{"mappings":"iiBAAA,IAsC2BA,EAMnBC,EA5CRC,EAAAC,EAAA,S,0BAGMC,EAAM,mCAKNC,GAHiBC,SAASC,cAAc,2BACvBD,SAASC,cAAc,yBAEzBC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAoChEV,GANmBD,EA7BTK,GAoCbO,KACC,SAAAC,G,MAAS,qJAKGC,OADRD,EAAME,YACP,WAEOD,OAFED,EAAMG,eAAe,0EAGvBF,OADAD,EAAMG,eAAe,yBAErBF,OADA,IAAIG,KAAKJ,EAAMK,cAAcC,cAAc,wBACcL,QAAxDD,EAAMO,WAAa,IAAIR,KAAI,SAAAS,G,OAAMC,EAAOD,E,IAAKE,KAAK,MAAM,qD,IAMpEA,KAAK,IACejB,SAASC,cAAc,2BAC/BiB,UAAYvB,EAE3BwB,EAAuBzB,GACvB0B,IAxDFC,QAAQC,IAAIvB,GAEZ,IAAMwB,EAAoBrB,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAyD7E,SAA2BX,GAMzB,IAAMC,EAAYD,EACfY,KACC,SAAAC,G,MAAS,qJAKGC,OADRD,EAAME,YACP,WAEOD,OAFED,EAAMG,eAAe,0EAGvBF,OADAD,EAAMG,eAAe,yBAErBF,OADA,IAAIG,KAAKJ,EAAMK,cAAcC,cAAc,wBACcL,QAAxDD,EAAMO,WAAa,IAAIR,KAAI,SAAAS,G,OAAMC,EAAOD,E,IAAKE,KAAK,MAAM,qD,IAMpEA,KAAK,IACejB,SAASC,cAAc,yBAC/BiB,UAAYvB,EAE3BwB,EAAuBzB,GACvB0B,G,CApFFI,CAAkBD,GAClBF,QAAQC,IAAIC,GAEZ,IAAMP,EAAS,CACb,GAAI,SACJ,GAAI,YACJ,GAAI,YACJ,GAAI,SACJ,GAAI,QACJ,GAAI,cACJ,GAAI,QACJ,MAAO,SACP,GAAI,UACJ,GAAI,UACJ,GAAI,SACJ,MAAO,QACP,KAAM,UACN,MAAO,UACP,IAAK,kBACL,MAAO,WACP,GAAI,WACJ,MAAO,MACP,GAAI,W,SAmESS,EAAkBC,G,OAAlBC,EAAiBC,MAAAC,KAAAC,U,UAAjBH,I,OAAAA,EAAfI,EAAAnC,EAAA,CAAAmC,EAAAC,GAAAC,MAAA,SAAAC,EAAiCR,G,IAEvBS,E,2FAAiBC,EAAAC,QAAMC,IAC3B,sCAAyD9B,OAAnBkB,EAAQ,aAAelB,OAAJV,I,cADrDqC,EAAQI,EAAAC,K,kBAGPL,EAASM,M,OAGhB,M,yBADApB,QAAQqB,MAAKH,EAAAI,IACP,IAAIC,MAAM,gC,0DARYhB,MAAAC,KAAAC,U,CA0DM,SAA7BX,EAAuBzB,GACLM,SAAS6C,iBAAiB,cAElCC,SAAQ,SAACC,EAAiBC,GACzCD,EAAgBE,iBAAiB,QAASlB,EAAAnC,EAAA,CAAAmC,EAAAC,GAAAC,MAAA,SAAAC,I,IAClCgB,E,kFAAqBzB,EAAkB/B,EAAOsD,GAAOjC,I,OAArDmC,EAAYX,EAAAC,KAnDLjC,EAoDH2C,EAnDOlD,SAASC,cAAc,wBAE/BiB,UAAY,qGAIXV,OADRD,EAAME,YACP,WAEOD,OAFED,EAAMG,eAAe,4DAGVF,OADbD,EAAMG,eAAe,oCACgBF,OAAxBD,EAAM4C,aAAa,OACrB3C,OAD0BD,EAAM6C,WAAW,iCAEvC5C,OADJD,EAAM8C,WAAW,qCAGhC7C,OAFmBD,EAAMG,eAAe,4BAOtBF,OALlB8C,MAAMC,QAAQhD,EAAMiD,QAChBjD,EAAMiD,OAAOlD,KAAI,SAAAmD,G,OAASA,EAAMC,I,IAAMzC,KAAK,MAC3C,GACL,2EAEkCT,OAAfD,EAAMoD,SAAS,uQAS3B3D,SAASC,cAAc,UAC/B2D,MAAMC,QAAU,Q,iCA7BxB,IAAmBtD,C,cA0D8B,SAAxCa,IACcpB,SAASC,cAAc,mBAE/BgD,iBAAiB,SAAS,WACvBjD,SAASC,cAAc,UAC/B2D,MAAMC,QAAU,M","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\nconst watchContainer = document.querySelector('.lib__watched-container');\nconst queueContainer = document.querySelector('.lib__queue-container');\n\nconst storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\nrenderWatchMovies(storedMovies);\nconsole.log(storedMovies);\n\nconst storedQueueMovies = JSON.parse(localStorage.getItem('queueMovies')) || [];\nrenderQueueMovies(storedQueueMovies);\nconsole.log(storedQueueMovies);\n\nconst genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nfunction renderWatchMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const watchContainer = document.querySelector('.lib__watched-container');\n  watchContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderQueueMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const queueContainer = document.querySelector('.lib__queue-container');\n  queueContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\n// ==Modal Functions\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\nfunction showModal(movie) {\n  const modalDetails = document.querySelector('.movie-details_modal');\n\n  modalDetails.innerHTML = `\n    <div class=\"modal__list\">\n      <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" alt=\"${movie.original_title} Poster\">\n      <div class=\"modal__text\">\n        <h2>${movie.original_title}</h2>\n        <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n        <p>Popularity: ${movie.popularity}</p>\n        <p>Original Title: ${movie.original_title}</p>\n        <p>Genre: ${\n          Array.isArray(movie.genres)\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : ''\n        }</p>\n        <p class=\"abaut\"> ABOUT </p> \n        <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n        <div class=\"modal__buttons\"> \n          <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n          <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'block';\n}\n\n// async function renderStartMovies() {\n//   try {\n//     // const movies = await fetchMovies();\n//     // renderMovies(movies);\n\n//     addClickEventListeners(movies);\n//     addOverlayClickListener();\n//   } catch (error) {\n//     console.error(error);\n//     throw new Error('Error rendering start movies');\n//   }\n// }\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      const movieDetails = await fetchMovieDetails(movies[index].id);\n      showModal(movieDetails);\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// renderStartMovies();\n\n// ==\n\n//   const imgStartElements = document.querySelectorAll('.img-start');\n//   imgStartElements.forEach((imgStartElement, index) => {\n//     imgStartElement.addEventListener('click', () => {\n//       showModal(movies[index]);\n//     });\n//   });\n\n//   const modalOverlay = document.querySelector('.modal__overlay');\n//   modalOverlay.addEventListener('click', () => {\n//     const modal = document.querySelector('.modal');\n//     modal.style.display = 'none';\n//   });\n\n// ==\n\n// function showModal(movie) {\n//   //   const modalDetails = document.querySelector('.movie-details_modal');\n//   const watchContainer = document.querySelector('.lib__watched-container');\n\n//   watchContainer.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n// }\n\n// ===================\n\n// async function initialize() {\n//   try {\n//     Notiflix.Loading.dots('Loading...');\n//     const movies = await fetchMovies();\n//     renderMovies(movies);\n//     Notiflix.Loading.remove();\n//   } catch (error) {\n//     Notiflix.Report.failure('Oops!', error.message, 'OK');\n//   }\n// }\n"],"names":["movies","movieHTML","$bpxeT","parcelRequire","$93effc6fc56091ad$var$KEY","$93effc6fc56091ad$var$storedMovies","document","querySelector","JSON","parse","localStorage","getItem","map","movie","concat","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","$93effc6fc56091ad$var$genres","join","innerHTML","$93effc6fc56091ad$var$addClickEventListeners","$93effc6fc56091ad$var$addOverlayClickListener","console","log","$93effc6fc56091ad$var$storedQueueMovies","$93effc6fc56091ad$var$renderQueueMovies","$93effc6fc56091ad$var$fetchMovieDetails","movieId","$93effc6fc56091ad$var$_fetchMovieDetails","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","data","error","t0","Error","querySelectorAll","forEach","imgStartElement","index","addEventListener","movieDetails","vote_average","vote_count","popularity","Array","isArray","genres","genre","name","overview","style","display"],"version":3,"file":"library.02b8196e.js.map"}