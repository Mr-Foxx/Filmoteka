{"mappings":"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","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\nconst watchLibraryBtn = document.querySelector('.button__libraty-watched');\nconst queueLibraryBtn = document.querySelector('.button__library-queue');\nconst watchContainer = document.querySelector('.lib__watched-container');\nconst queueContainer = document.querySelector('.lib__queue-container');\nconst emptyCountainer = document.querySelector('.empty-page');\nconst emptyContQueue = document.querySelector('.empty-page-queue');\n\n// queueContainer.style.display = 'none';\nqueueContainer.style.transform = 'scale(0)';\nwatchLibraryBtn.classList.add('library_btn-click-color');\n\nwatchLibraryBtn.addEventListener('click', openWatched);\nqueueLibraryBtn.addEventListener('click', openQueue);\n\nfunction openWatched() {\n  // queueContainer.style.display = 'none';\n  queueContainer.style.transform = 'scale(0)';\n  // watchContainer.style.display = 'block';\n  watchContainer.style.transform = 'scale(1)';\n  watchLibraryBtn.classList.add('library_btn-click-color');\n  queueLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n  console.log(storedMovies.length);\n  if (storedMovies.length === 0) {\n    watchContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderWatchMovies(storedMovies);\n  console.log(storedMovies);\n}\n\nfunction openQueue() {\n  // watchContainer.style.display = 'none';\n  watchContainer.style.transform = 'scale(0)';\n  // queueContainer.style.display = 'block';\n  queueContainer.style.transform = 'scale(1)';\n  queueLibraryBtn.classList.add('library_btn-click-color');\n  watchLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n  console.log(storedQueueMovies.length);\n  if (storedQueueMovies.length === 0) {\n    queueContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderQueueMovies(storedQueueMovies);\n  console.log(storedQueueMovies);\n}\n\nopenWatched();\n\nopenQueue();\n\nconst genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nfunction renderWatchMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const watchContainer = document.querySelector('.lib__watched-container');\n  watchContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderQueueMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const queueContainer = document.querySelector('.lib__queue-container');\n  queueContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderAfterDelitingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    const updatedWatchedMovies = storedWatchedMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('watchMovies', JSON.stringify(updatedWatchedMovies));\n\n    renderWatchMovies(updatedWatchedMovies);\n  }\n}\n\nfunction renderAfterDelitingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    const updatedQueueMovies = storedQueueMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('queueMovies', JSON.stringify(updatedQueueMovies));\n\n    renderQueueMovies(updatedQueueMovies);\n  }\n}\n\n// ==Modal Functions\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\nfunction showModal(movie) {\n  const modalDetails = document.querySelector('.movie-details_modal');\n\n  modalDetails.innerHTML = `\n    <div class=\"modal__list\">\n      <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" alt=\"${movie.original_title} Poster\">\n      <div class=\"modal__text\">\n        <h2>${movie.original_title}</h2>\n        <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n        <p>Popularity: ${movie.popularity}</p>\n        <p>Original Title: ${movie.original_title}</p>\n        <p>Genre: ${\n          Array.isArray(movie.genres)\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : ''\n        }</p>\n        <p class=\"abaut\"> ABOUT </p> \n        <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n        <div class=\"modal__buttons\"> \n          <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n          <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'block';\n\n  click(movie);\n}\n\nfunction click(movie) {\n  const watchedBtn = document.querySelector('.modal__button-watched');\n  const queueBtn = document.querySelector('.modal__button-queue');\n\n  // =watchedBtn при натисканні на кнопку первіряє по ід чи є фільм в локал та змінює напис кнопки\n\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    watchedBtn.textContent = 'REMOVE FROM WATCHED';\n  } else {\n    watchedBtn.textContent = 'ADD TO WATCHED';\n  }\n\n  watchedBtn.addEventListener('click', () => {\n    let storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n    const isMovieExists = storedMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedMovies = storedMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      watchedBtn.textContent = 'ADD TO WATCHED';\n      renderAfterDelitingObjectWatch(movie);\n    } else {\n      storedMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      watchedBtn.textContent = 'REMOVE FROM WATCHED';\n    }\n\n    localStorage.setItem('watchMovies', JSON.stringify(storedMovies));\n  });\n\n  // = queueBtn\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    queueBtn.textContent = 'REMOVE FROM QUEUE';\n  } else {\n    queueBtn.textContent = 'ADD TO QUEUE';\n  }\n\n  queueBtn.addEventListener('click', () => {\n    let storedQueueMovies =\n      JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n    const isMovieExists = storedQueueMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedQueueMovies = storedQueueMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      queueBtn.textContent = 'ADD TO QUEUQ';\n      renderAfterDelitingObjectQueue(movie);\n    } else {\n      storedQueueMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      queueBtn.textContent = 'REMOVE FROM QUEUQ';\n    }\n\n    localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n  });\n}\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movies[index].id);\n        showModal(movieDetails);\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// ==\n\n// const savedData1 = JSON.parse(localStorage.getItem('watchMovies'));\n// // console.log(savedData1.length);\n// // console.log(123123);\n// if (savedData1.length > 0) {\n//   // emptyCountainer.style.display = 'none';\n//   emptyCountainer.classList.add('is-hidden');\n// }\n// emptyContQueue.classList.add('is-hidden');\n\n// ==\n\n//   const imgStartElements = document.querySelectorAll('.img-start');\n//   imgStartElements.forEach((imgStartElement, index) => {\n//     imgStartElement.addEventListener('click', () => {\n//       showModal(movies[index]);\n//     });\n//   });\n\n//   const modalOverlay = document.querySelector('.modal__overlay');\n//   modalOverlay.addEventListener('click', () => {\n//     const modal = document.querySelector('.modal');\n//     modal.style.display = 'none';\n//   });\n\n// ==\n\n// function showModal(movie) {\n//   //   const modalDetails = document.querySelector('.movie-details_modal');\n//   const watchContainer = document.querySelector('.lib__watched-container');\n\n//   watchContainer.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n// }\n\n// ===================\n\n// async function initialize() {\n//   try {\n//     Notiflix.Loading.dots('Loading...');\n//     const movies = await fetchMovies();\n//     renderMovies(movies);\n//     Notiflix.Loading.remove();\n//   } catch (error) {\n//     Notiflix.Report.failure('Oops!', error.message, 'OK');\n//   }\n// }\n"],"names":["$bpxeT","parcelRequire","$93effc6fc56091ad$var$KEY","$93effc6fc56091ad$var$watchLibraryBtn","document","querySelector","$93effc6fc56091ad$var$queueLibraryBtn","$93effc6fc56091ad$var$watchContainer","$93effc6fc56091ad$var$queueContainer","$93effc6fc56091ad$var$openWatched","style","transform","classList","add","remove","storedMovies","JSON","parse","localStorage","getItem","console","log","length","$93effc6fc56091ad$var$renderWatchMovies","innerHTML","$93effc6fc56091ad$var$openQueue","storedQueueMovies","$93effc6fc56091ad$var$renderQueueMovies","addEventListener","$93effc6fc56091ad$var$genres","movies","movieHTML","map","movie","concat","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","join","$93effc6fc56091ad$var$addClickEventListeners","$93effc6fc56091ad$var$addOverlayClickListener","$93effc6fc56091ad$var$fetchMovieDetails","movieId","$93effc6fc56091ad$var$_fetchMovieDetails","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","data","error","t0","Error","$93effc6fc56091ad$var$showModal","vote_average","vote_count","popularity","Array","isArray","genres","genre","name","overview","display","watchedBtn","queueBtn","some","storedMovie","textContent","filter","$6JpON","Notify","info","storedWatchedMovies","updatedWatchedMovies","setItem","stringify","$93effc6fc56091ad$var$renderAfterDelitingObjectWatch","push","success","updatedQueueMovies","$93effc6fc56091ad$var$renderAfterDelitingObjectQueue","$93effc6fc56091ad$var$click","querySelectorAll","forEach","imgStartElement","index","message"],"version":3,"file":"library.a29734f0.js.map"}