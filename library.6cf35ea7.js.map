{"mappings":"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","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { genres } from './genres';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\nconst watchLibraryBtn = document.querySelector('.button__libraty-watched');\nconst queueLibraryBtn = document.querySelector('.button__library-queue');\nconst watchContainer = document.querySelector('.lib__watched-container');\nconst queueContainer = document.querySelector('.lib__queue-container');\nconst emptyCountainer = document.querySelector('.empty-page');\nconst emptyContQueue = document.querySelector('.empty-page-queue');\n\nqueueContainer.classList.add('visibility-none');\nwatchLibraryBtn.classList.add('library_btn-click-color');\n\nwatchLibraryBtn.addEventListener('click', openWatched);\nqueueLibraryBtn.addEventListener('click', openQueue);\n\nfunction openWatched() {\n  queueContainer.innerHTML = '';\n\n  watchLibraryBtn.classList.add('library_btn-click-color');\n  queueLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n  console.log(storedMovies.length);\n  if (storedMovies.length === 0) {\n    watchContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderWatchMovies(storedMovies);\n}\n\nfunction openQueue() {\n  watchContainer.innerHTML = '';\n\n  queueLibraryBtn.classList.add('library_btn-click-color');\n  watchLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n  console.log(storedQueueMovies.length);\n  if (storedQueueMovies.length === 0) {\n    queueContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderQueueMovies(storedQueueMovies);\n  console.log(storedQueueMovies);\n}\nopenQueue();\nopenWatched();\n\nfunction renderWatchMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const watchContainer = document.querySelector('.lib__watched-container');\n  watchContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderQueueMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const queueContainer = document.querySelector('.lib__queue-container');\n  queueContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderAfterDelitingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    const updatedWatchedMovies = storedWatchedMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('watchMovies', JSON.stringify(updatedWatchedMovies));\n\n    renderWatchMovies(updatedWatchedMovies);\n  }\n}\n\nfunction renderAfterDelitingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    const updatedQueueMovies = storedQueueMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('queueMovies', JSON.stringify(updatedQueueMovies));\n\n    renderQueueMovies(updatedQueueMovies);\n  }\n}\n\nfunction renderAfterAddingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  storedWatchedMovies.push(movie);\n\n  localStorage.setItem('watchMovies', JSON.stringify(storedWatchedMovies));\n\n  renderWatchMovies(storedWatchedMovies);\n}\n\nfunction renderAfterAddingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  storedQueueMovies.push(movie);\n\n  localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n\n  renderQueueMovies(storedQueueMovies);\n}\n\n// ==Modal Functions\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\nfunction showModal(movie) {\n  const modalDetails = document.querySelector('.movie-details_modal');\n\n  modalDetails.innerHTML = `\n    <div class=\"modal__list\">\n      <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" alt=\"${movie.original_title} Poster\">\n      <div class=\"modal__text\">\n        <h2>${movie.original_title}</h2>\n        <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n        <p>Popularity: ${movie.popularity}</p>\n        <p>Original Title: ${movie.original_title}</p>\n        <p>Genre: ${\n          Array.isArray(movie.genres)\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : ''\n        }</p>\n        <p class=\"abaut\"> ABOUT </p>\n        <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n        <div class=\"modal__buttons\">\n          <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n          <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'block';\n\n  click(movie);\n}\n\nfunction click(movie) {\n  const watchedBtn = document.querySelector('.modal__button-watched');\n  const queueBtn = document.querySelector('.modal__button-queue');\n\n  // =watchedBtn при натисканні на кнопку первіряє по ід чи є фільм в локал та змінює напис кнопки\n\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    watchedBtn.textContent = 'REMOVE FROM WATCHED';\n  } else {\n    watchedBtn.textContent = 'ADD TO WATCHED';\n  }\n\n  watchedBtn.addEventListener('click', () => {\n    let storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n    const isMovieExists = storedMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedMovies = storedMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      watchedBtn.textContent = 'ADD TO WATCHED';\n      renderAfterDelitingObjectWatch(movie);\n    } else {\n      storedMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      watchedBtn.textContent = 'REMOVE FROM WATCHED';\n      renderAfterAddingObjectWatch(movie);\n    }\n\n    localStorage.setItem('watchMovies', JSON.stringify(storedMovies));\n  });\n\n  // = queueBtn\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    queueBtn.textContent = 'REMOVE FROM QUEUE';\n  } else {\n    queueBtn.textContent = 'ADD TO QUEUE';\n  }\n\n  queueBtn.addEventListener('click', () => {\n    let storedQueueMovies =\n      JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n    const isMovieExists = storedQueueMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedQueueMovies = storedQueueMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      queueBtn.textContent = 'ADD TO QUEUQ';\n      renderAfterDelitingObjectQueue(movie);\n    } else {\n      storedQueueMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      queueBtn.textContent = 'REMOVE FROM QUEUQ';\n      renderAfterAddingObjectQueue(movie);\n    }\n\n    localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n  });\n}\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movies[index].id);\n        showModal(movieDetails);\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// ==\n\n// const savedData1 = JSON.parse(localStorage.getItem('watchMovies'));\n// // console.log(savedData1.length);\n// // console.log(123123);\n// if (savedData1.length > 0) {\n//   // emptyCountainer.style.display = 'none';\n//   emptyCountainer.classList.add('is-hidden');\n// }\n// emptyContQueue.classList.add('is-hidden');\n\n// ==\n\n//   const imgStartElements = document.querySelectorAll('.img-start');\n//   imgStartElements.forEach((imgStartElement, index) => {\n//     imgStartElement.addEventListener('click', () => {\n//       showModal(movies[index]);\n//     });\n//   });\n\n//   const modalOverlay = document.querySelector('.modal__overlay');\n//   modalOverlay.addEventListener('click', () => {\n//     const modal = document.querySelector('.modal');\n//     modal.style.display = 'none';\n//   });\n\n// ==\n\n// function showModal(movie) {\n//   //   const modalDetails = document.querySelector('.movie-details_modal');\n//   const watchContainer = document.querySelector('.lib__watched-container');\n\n//   watchContainer.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n// }\n\n// ===================\n\n// async function initialize() {\n//   try {\n//     Notiflix.Loading.dots('Loading...');\n//     const movies = await fetchMovies();\n//     renderMovies(movies);\n//     Notiflix.Loading.remove();\n//   } catch (error) {\n//     Notiflix.Report.failure('Oops!', error.message, 'OK');\n//   }\n// }\n"],"names":["$bpxeT","parcelRequire","$93effc6fc56091ad$var$KEY","$93effc6fc56091ad$var$watchLibraryBtn","document","querySelector","$93effc6fc56091ad$var$queueLibraryBtn","$93effc6fc56091ad$var$watchContainer","$93effc6fc56091ad$var$queueContainer","$93effc6fc56091ad$var$openWatched","innerHTML","classList","add","remove","storedMovies","JSON","parse","localStorage","getItem","console","log","length","$93effc6fc56091ad$var$renderWatchMovies","$93effc6fc56091ad$var$openQueue","storedQueueMovies","$93effc6fc56091ad$var$renderQueueMovies","movies","movieHTML","map","movie","concat","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","$twtVq","genres","join","$93effc6fc56091ad$var$addClickEventListeners","$93effc6fc56091ad$var$addOverlayClickListener","$93effc6fc56091ad$var$fetchMovieDetails","movieId","$93effc6fc56091ad$var$_fetchMovieDetails","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","_ctx","sent","data","error","t0","Error","$93effc6fc56091ad$var$showModal","vote_average","vote_count","popularity","Array","isArray","genre","name","overview","style","display","watchedBtn","queueBtn","some","storedMovie","textContent","addEventListener","filter","$6JpON","Notify","info","storedWatchedMovies","updatedWatchedMovies","setItem","stringify","$93effc6fc56091ad$var$renderAfterDelitingObjectWatch","push","success","$93effc6fc56091ad$var$renderAfterAddingObjectWatch","updatedQueueMovies","$93effc6fc56091ad$var$renderAfterDelitingObjectQueue","$93effc6fc56091ad$var$renderAfterAddingObjectQueue","$93effc6fc56091ad$var$click","querySelectorAll","forEach","imgStartElement","index","message"],"version":3,"file":"library.6cf35ea7.js.map"}