{"mappings":"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","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { genres } from './genres';\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9658d89d84efdefd667887b926d66a88';\n\nconst watchLibraryBtn = document.querySelector('.button__libraty-watched');\nconst queueLibraryBtn = document.querySelector('.button__library-queue');\nconst watchContainer = document.querySelector('.lib__watched-container');\nconst queueContainer = document.querySelector('.lib__queue-container');\nconst emptyCountainer = document.querySelector('.empty-page');\nconst emptyContQueue = document.querySelector('.empty-page-queue');\n\nqueueContainer.classList.add('visibility-none');\nwatchLibraryBtn.classList.add('library_btn-click-color');\n\nwatchLibraryBtn.addEventListener('click', openWatched);\nqueueLibraryBtn.addEventListener('click', openQueue);\n\nfunction openWatched() {\n  queueContainer.innerHTML = '';\n\n  watchLibraryBtn.classList.add('library_btn-click-color');\n  queueLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n  console.log(storedMovies.length);\n  if (storedMovies.length === 0) {\n    watchContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderWatchMovies(storedMovies);\n}\n\nfunction openQueue() {\n  watchContainer.innerHTML = '';\n\n  queueLibraryBtn.classList.add('library_btn-click-color');\n  watchLibraryBtn.classList.remove('library_btn-click-color');\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n  console.log(storedQueueMovies.length);\n  if (storedQueueMovies.length === 0) {\n    queueContainer.innerHTML = '<p>There are no films in this gallery</p>';\n    return;\n  }\n\n  renderQueueMovies(storedQueueMovies);\n  console.log(storedQueueMovies);\n}\nopenQueue();\nopenWatched();\n\nfunction renderWatchMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const watchContainer = document.querySelector('.lib__watched-container');\n  watchContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderQueueMovies(movies) {\n  // if (!movies || !Array.isArray(movies) || movies.length === 0) {\n  //   watchContainer.innerHTML = '<p>No movies to display</p>';\n  //   return;\n  // }\n\n  const movieHTML = movies\n    .map(\n      movie => `\n    <div class=\"movie-start_container\">\n      <div class=\"movie-start\">\n        <img class='img-start'  src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.original_title} Poster\" />\n        <div class=\"movie-details_start\">\n          <h2>${movie.original_title}</h2>\n          <p> ${new Date(movie.release_date).getFullYear()}</p>\n          <p> ${(movie.genre_ids || []).map(id => genres[id]).join(', ')}</p>\n        </div>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n  const queueContainer = document.querySelector('.lib__queue-container');\n  queueContainer.innerHTML = movieHTML;\n\n  addClickEventListeners(movies);\n  addOverlayClickListener();\n}\n\nfunction renderAfterDelitingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    const updatedWatchedMovies = storedWatchedMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('watchMovies', JSON.stringify(updatedWatchedMovies));\n\n    renderWatchMovies(updatedWatchedMovies);\n  }\n}\n\nfunction renderAfterDelitingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    const updatedQueueMovies = storedQueueMovies.filter(\n      storedMovie => storedMovie.id !== movie.id\n    );\n\n    localStorage.setItem('queueMovies', JSON.stringify(updatedQueueMovies));\n\n    renderQueueMovies(updatedQueueMovies);\n  }\n}\n\nfunction renderAfterAddingObjectWatch(movie) {\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  storedWatchedMovies.push(movie);\n\n  localStorage.setItem('watchMovies', JSON.stringify(storedWatchedMovies));\n\n  renderWatchMovies(storedWatchedMovies);\n}\n\nfunction renderAfterAddingObjectQueue(movie) {\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  storedQueueMovies.push(movie);\n\n  localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n\n  renderQueueMovies(storedQueueMovies);\n}\n\n// ==Modal Functions\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error fetching movie details');\n  }\n}\n\nfunction showModal(movie) {\n  const modalDetails = document.querySelector('.movie-details_modal');\n\n  modalDetails.innerHTML = `\n    <div class=\"modal__list\">\n      <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" alt=\"${movie.original_title} Poster\">\n      <div class=\"modal__text\">\n        <h2>${movie.original_title}</h2>\n        <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n        <p>Popularity: ${movie.popularity}</p>\n        <p>Original Title: ${movie.original_title}</p>\n        <p>Genre: ${\n          Array.isArray(movie.genres)\n            ? movie.genres.map(genre => genre.name).join(', ')\n            : ''\n        }</p>\n        <p class=\"abaut\"> ABOUT </p>\n        <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n        <div class=\"modal__buttons\">\n          <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n          <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'block';\n\n  click(movie);\n}\n\nfunction click(movie) {\n  const watchedBtn = document.querySelector('.modal__button-watched');\n  const queueBtn = document.querySelector('.modal__button-queue');\n\n  // =watchedBtn при натисканні на кнопку первіряє по ід чи є фільм в локал та змінює напис кнопки\n\n  const storedWatchedMovies =\n    JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n  const isWatchedMovieExists = storedWatchedMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isWatchedMovieExists) {\n    watchedBtn.textContent = 'REMOVE FROM WATCHED';\n  } else {\n    watchedBtn.textContent = 'ADD TO WATCHED';\n  }\n\n  watchedBtn.addEventListener('click', () => {\n    let storedMovies = JSON.parse(localStorage.getItem('watchMovies')) || [];\n\n    const isMovieExists = storedMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedMovies = storedMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      watchedBtn.textContent = 'ADD TO WATCHED';\n      renderAfterDelitingObjectWatch(movie);\n    } else {\n      storedMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      watchedBtn.textContent = 'REMOVE FROM WATCHED';\n      renderAfterAddingObjectWatch(movie);\n    }\n\n    localStorage.setItem('watchMovies', JSON.stringify(storedMovies));\n  });\n\n  // = queueBtn\n\n  const storedQueueMovies =\n    JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n  const isQueueMovieExists = storedQueueMovies.some(\n    storedMovie => storedMovie.id === movie.id\n  );\n  if (isQueueMovieExists) {\n    queueBtn.textContent = 'REMOVE FROM QUEUE';\n  } else {\n    queueBtn.textContent = 'ADD TO QUEUE';\n  }\n\n  queueBtn.addEventListener('click', () => {\n    let storedQueueMovies =\n      JSON.parse(localStorage.getItem('queueMovies')) || [];\n\n    const isMovieExists = storedQueueMovies.some(\n      storedMovie => storedMovie.id === movie.id\n    );\n\n    if (isMovieExists) {\n      storedQueueMovies = storedQueueMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      Notiflix.Notify.info('movie removed from watched');\n      queueBtn.textContent = 'ADD TO QUEUQ';\n      renderAfterDelitingObjectQueue(movie);\n    } else {\n      storedQueueMovies.push(movie);\n      Notiflix.Notify.success('Movie added to watch');\n      queueBtn.textContent = 'REMOVE FROM QUEUQ';\n      renderAfterAddingObjectQueue(movie);\n    }\n\n    localStorage.setItem('queueMovies', JSON.stringify(storedQueueMovies));\n  });\n}\n\n// Функція, що додає події на зображення фільмів\nfunction addClickEventListeners(movies) {\n  const imgStartElements = document.querySelectorAll('.img-start');\n\n  imgStartElements.forEach((imgStartElement, index) => {\n    imgStartElement.addEventListener('click', async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movies[index].id);\n        showModal(movieDetails);\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n  });\n}\n\n// Функція, що додає подію на клік по оверлею модального вікна\nfunction addOverlayClickListener() {\n  const modalOverlay = document.querySelector('.modal__overlay');\n\n  modalOverlay.addEventListener('click', () => {\n    const modal = document.querySelector('.modal');\n    modal.style.display = 'none';\n  });\n}\n\n// ==\n\n// const savedData1 = JSON.parse(localStorage.getItem('watchMovies'));\n// // console.log(savedData1.length);\n// // console.log(123123);\n// if (savedData1.length > 0) {\n//   // emptyCountainer.style.display = 'none';\n//   emptyCountainer.classList.add('is-hidden');\n// }\n// emptyContQueue.classList.add('is-hidden');\n\n// ==\n\n//   const imgStartElements = document.querySelectorAll('.img-start');\n//   imgStartElements.forEach((imgStartElement, index) => {\n//     imgStartElement.addEventListener('click', () => {\n//       showModal(movies[index]);\n//     });\n//   });\n\n//   const modalOverlay = document.querySelector('.modal__overlay');\n//   modalOverlay.addEventListener('click', () => {\n//     const modal = document.querySelector('.modal');\n//     modal.style.display = 'none';\n//   });\n\n// ==\n\n// function showModal(movie) {\n//   //   const modalDetails = document.querySelector('.movie-details_modal');\n//   const watchContainer = document.querySelector('.lib__watched-container');\n\n//   watchContainer.innerHTML = `\n//     <div class=\"modal__list\">\n//       <img class=\"img-modal\" src=\"https://image.tmdb.org/t/p/w500${\n//         movie.poster_path\n//       }\" alt=\"${movie.original_title} Poster\">\n//       <div class=\"modal__text\">\n//         <h2>${movie.original_title}</h2>\n//         <p>Vote / Votes: ${movie.vote_average} / ${movie.vote_count}</p>\n//         <p>Popularity: ${movie.popularity}</p>\n//         <p>Original Title: ${movie.original_title}</p>\n//         <p>Genre: ${\n//           Array.isArray(movie.genres)\n//             ? movie.genres.map(genre => genre.name).join(', ')\n//             : ''\n//         }</p>\n//         <p class=\"abaut\"> ABOUT </p>\n//         <p>  Description: ${movie.overview}</p> <!-- Доданий опис -->\n//         <div class=\"modal__buttons\">\n//           <button class=\"modal__button-watched\">ADD TO WATCHED</button>\n//           <button class=\"modal__button-queue\">ADD TO QUEUE</button>\n//         </div>\n//       </div>\n//     </div>\n//   `;\n\n//   const modal = document.querySelector('.modal');\n//   modal.style.display = 'block';\n// }\n\n// ===================\n\n// async function initialize() {\n//   try {\n//     Notiflix.Loading.dots('Loading...');\n//     const movies = await fetchMovies();\n//     renderMovies(movies);\n//     Notiflix.Loading.remove();\n//   } catch (error) {\n//     Notiflix.Report.failure('Oops!', error.message, 'OK');\n//   }\n// }\n"],"names":["$2shzp","parcelRequire","$1cafa503bc57b7a0$var$watchLibraryBtn","document","querySelector","$1cafa503bc57b7a0$var$queueLibraryBtn","$1cafa503bc57b7a0$var$watchContainer","$1cafa503bc57b7a0$var$queueContainer","$1cafa503bc57b7a0$var$openWatched","innerHTML","classList","add","remove","storedMovies","JSON","parse","localStorage","getItem","console","log","length","$1cafa503bc57b7a0$var$renderWatchMovies","$1cafa503bc57b7a0$var$openQueue","storedQueueMovies","$1cafa503bc57b7a0$var$renderQueueMovies","movies","movieHTML","map","movie","poster_path","original_title","Date","release_date","getFullYear","genre_ids","id","$ezyJp","genres","join","$1cafa503bc57b7a0$var$addClickEventListeners","$1cafa503bc57b7a0$var$addOverlayClickListener","$1cafa503bc57b7a0$var$showModal","vote_average","vote_count","popularity","Array","isArray","genre","name","overview","style","display","watchedBtn","queueBtn","storedWatchedMovies","some","storedMovie","textContent","addEventListener","filter","$parcel$interopDefault","$7Y9D8","Notify","info","updatedWatchedMovies","setItem","stringify","$1cafa503bc57b7a0$var$renderAfterDelitingObjectWatch","push","success","$1cafa503bc57b7a0$var$renderAfterAddingObjectWatch","storedQueueMovies1","updatedQueueMovies","$1cafa503bc57b7a0$var$renderAfterDelitingObjectQueue","$1cafa503bc57b7a0$var$renderAfterAddingObjectQueue","$1cafa503bc57b7a0$var$click","querySelectorAll","forEach","imgStartElement","index","async","movieId","default","get","data","error","Error","$1cafa503bc57b7a0$var$fetchMovieDetails","message"],"version":3,"file":"library.bb8bcfa5.js.map"}